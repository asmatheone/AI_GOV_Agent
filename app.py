

import streamlit as st
import openai
import os
from PyPDF2 import PdfReader
import docx
from docx import Document



# ุฅุนุฏุงุฏุงุช ุงูุตูุญุฉ
st.set_page_config(page_title="ูุณุงุนุฏ ุงูุญูููู ", page_icon="logo_gov.png", layout="centered")

# CSS ูุชูุณูู ุงููุงุฌูุฉ
st.markdown(
    """
    <style>
    #MainMenu {visibility: hidden;}
    footer {visibility: hidden;}
    header {visibility: hidden;}
    
    .stApp {
        background-color: #ffffff;
        direction: rtl;
    }
    h1, h2, h3 {
        color: #004225 !important;
        text-align: center !important;
    }
    label, .stTextInput, .stTextArea, .stSelectbox {
        text-align: right !important;
        direction: rtl;
    }
    .warning {
        color: black;
        font-weight: bold;
        text-align: center;
        margin-top: -10px;
        margin-bottom: 20px;
    }
    </style>
    """,
    unsafe_allow_html=True
)


# ุงูุดุนุงุฑ ูุงูุนููุงู ูุงูุชุญุฐูุฑ
#st.image("logo.png", width=120)

st.markdown("## ุงููุณุงุนุฏ ุงูุญูููู")

st.markdown('<div class="warning">ูุฑุฌู ุงูุงูุชุฒุงู ุจุณูุงุณุงุช ุฎุตูุตูุฉ ุงูุจูุงูุงุช ูุญูุงูุฉ ุงูุจูุงูุงุช ุงูุดุฎุตูุฉ ุงููุนุชูุฏุฉ ูู ุงูููุฆู ุงูุณุนูุฏูุฉ ููุจูุงูุงุช ูุงูุฐูุงุก ูุงูุงุตุทูุงุนู  </div>', unsafe_allow_html=True)

# ุฅุนุฏุงุฏ ุงูููุชุงุญ
api_key = st.secrets["OPENAI_API_KEY"]
openai.api_key = api_key


# ุฑุณุงุฆู ุงููุธุงู ุงููุฎุชููุฉ
system_message_general = (
    "ุฃูุช ูุณุงุนุฏ ุฐูู ุฑุณูู ูุนูู ูู ุฌูุฉ ุญููููุฉ . ุฃุฌุจ ููุท ุนูู ุงูุฃุณุฆูุฉ ุงููุชุนููุฉ ุจุงูุฌูุงุช ุงูุญููููุฉ ูุฅุฏุงุฑุงุชูุงุ ุจูุง ูู ุฐูู ูููุณ ุญุตุฑูุง: ุฅุฏุงุฑุฉ ุงูุฃูู ุงูุณูุจุฑุงููุ ุฅุฏุงุฑุฉ ุญูููุฉ ุงูุจูุงูุงุชุ ุงูุฅุฏุงุฑุฉ ุงูุชูููุฉุ ุงูุฅุฏุงุฑุฉ ุงูุนุงูุฉ ููุญูููุฉ ูุงููุฎุงุทุฑุ ุงูููููุฉ ุงูุฅุฏุงุฑูุฉุ ุงูุงุณุชุฑุงุชูุฌูุงุชุ ุงูุฅุฌุฑุงุกุงุช ุงููุงููุฉุ ููู ูุง ูุชุนูู ุจุงูููุงู ุงูุฑุณููุฉ ูููุฒุงุฑุงุช. ุชุฌุงูู ุฃู ุฃุณุฆูุฉ ูุง ุชุฑุชุจุท ูุจุงุดุฑุฉ ุจุงูุฌูุงุช ุงูุญููููุฉ ."
)

system_message_email = (
    "ุฃูุช ูุณุงุนุฏ ูุชุฎุตุต ูู ูุชุงุจุฉ ุฑุณุงุฆู ุจุฑูุฏ ุฅููุชุฑููู ุฑุณููุฉ ููุงุจุฉ ุนู ุฌูุฉ ุญููููุฉ . "
    "ูู ุจุตูุงุบุฉ ุจุฑูุฏ ุฅููุชุฑููู ุฑุณูู ููููู ูููุตู ุจุงููุบุฉ ุงูุนุฑุจูุฉ ุจูุงุกู ุนูู ุงูุชุนูููุงุช ุงูุชุงููุฉ. "
    "ุงุจุฏุฃ ุจุชุญูุฉ ุฑุณููุฉุ ุซู ุตุบ ุงูุฑุณุงูุฉ ุจูุถูุญ ูุงุญุชุฑุงููุฉ."
)

system_message_policy = (
    "ุฃูุช ุฎุจูุฑ ูุชุฎุตุต ูู ุตูุงุบุฉ ุงูุณูุงุณุงุช ุงูุฑุณููุฉ ุฏุงุฎู ุฌูุฉ ุญููููุฉ . "
    "ูู ุจุตูุงุบุฉ ุณูุงุณุฉ ุฏุงุฎููุฉ ููุตูุฉ ูุทูููุฉ ููู ุงูุฃุณููุจ ุงูุฑุณูู ุงููุนุชูุฏ ูู ุงูุญูููุฉ ูุงูุงูุชุฒุงู. "
    "ุชุชุถูู ุงูุณูุงุณุฉ: ุงูุบุฑุถุ ุงููุทุงูุ ุงูุชุนุงุฑููุ ุงููุณุคูููุงุชุ ุงูุฅุฌุฑุงุกุงุชุ ุงูุนููุจุงุช (ุฅู ูุฌุฏุช)ุ ูุงููุฑุงุฌุน ุงูุชูุธูููุฉ. "
    "ุงุณุชุฎุฏู ูุบุฉ ุฑุณููุฉ ุฏูููุฉ ูุงุญุชุฑุงููุฉ   ."
)

system_message_risk = (
    "ุฃูุช ูุญูู ูุฎุชุต ูู ุฅุฏุงุฑุฉ ุงููุฎุงุทุฑ ูู ุฌูุฉ ุญููููุฉ. "
    "ูููุชู ูู ุชุญููู ูุคุดุฑุงุช ุงูุฃุฏุงุก ูุชูุฏูู ูุงุฆูุฉ ุฏูููุฉ ุจุงููุฎุงุทุฑ ุงููุญุชููุฉ ุงูุชู ูุฏ ุชูุงุฌููุง ุงูุฌูุงุช ุงูุญููููุฉ ุจูุงุกู ุนูู ุงููุคุดุฑ ุงููุฏุฎู. "
    "ูุง ุชุฌุจ ุนูู ุฃู ุฃุณุฆูุฉ ุฃุฎุฑู. ูุฏู ููุท ุงููุฎุงุทุฑ ุงููุชููุนุฉ ุจุดูู ูุงุถุญุ ุฑุณููุ ูููุตู."
)


# ูุงุฌูุฉ ุงูุฎูุงุฑุงุช
task = st.selectbox("ุงุฎุชุฑ ููุน ุงููููุฉ", [
    "ูุณุงุนุฏ ุฐูู - ุฃุฌุจ ุนู ุณุคุงู",
    "ุชูุฎูุต ูุณุชูุฏ",
    "ูุณุงุนุฏุฉ ูู ูุชุงุจุฉ ุจุฑูุฏ ุฅููุชุฑููู",
    "ุตูุงุบุฉ ุณูุงุณุฉ ุฌุฏูุฏุฉ",
    "ุงููุฎุงุทุฑ ุงููุชููุนุฉ ูููุคุดุฑุงุช"
])

# ุงูููุงู
if task == "ุงููุฎุงุทุฑ ุงููุชููุนุฉ ูููุคุดุฑุงุช":
    indicator = st.text_area("ุงูุชุจ ุงุณู ุงููุคุดุฑ ุฃู ูุตูู")
    if st.button("ุชุญููู ุงููุฎุงุทุฑ ุงููุชููุนุฉ"):
        if indicator:
            with st.spinner("ุฌุงุฑู ุชุญููู ุงููุคุดุฑ ูุชุญุฏูุฏ ุงููุฎุงุทุฑ..."):
                response = openai.ChatCompletion.create(
                    model="gpt-3.5-turbo",
                    messages=[
                        {"role": "system", "content": system_message_risk},
                        {"role": "user", "content": indicator}
                    ]
                )
                risks = response.choices[0].message["content"] 
                st.markdown("### ุงููุฎุงุทุฑ ุงููุชููุนุฉ:")
                st.write(risks)

elif task == "ุชูุฎูุต ูุณุชูุฏ":
    uploaded_file = st.file_uploader("ุงุฑูุน ูุณุชูุฏ PDF ุฃู Word", type=["pdf", "docx"])
    if uploaded_file:
        text = ""
        if uploaded_file.name.endswith(".pdf"):
            reader = PdfReader(uploaded_file)
            for page in reader.pages:
                text += page.extract_text()
        elif uploaded_file.name.endswith(".docx"):
            doc = docx.Document(uploaded_file)
            for para in doc.paragraphs:
                text += para.text + "\n"

        if text:
            with st.spinner("ุฌุงุฑู ุงูุชูุฎูุต..."):
                response = openai.ChatCompletion.create(
                    model="gpt-3.5-turbo",
                    messages=[
                        {"role": "system", "content": system_message_general + " ูู ุจุชูุฎูุต ุงููุณุชูุฏ ุงูุชุงูู ุจุดูู ุดุงูู ูููุตู:"},
                        {"role": "user", "content": text}
                    ]
                )
                summary = response.choices[0].message["content"] 
                st.markdown("### ุงูููุฎุต:")
                st.write(summary)

                docx_file = Document()
                docx_file.add_heading("ููุฎุต ุงููุณุชูุฏ", 0)
                docx_file.add_paragraph(summary)
                docx_path = "ููุฎุต_ุงููุณุชูุฏ.docx"
                docx_file.save(docx_path)
                with open(docx_path, "rb") as f:
                    st.download_button("ุชุญููู ุงูููุฎุต ูู Word", f, file_name=docx_path)

elif task == "ูุณุงุนุฏุฉ ูู ูุชุงุจุฉ ุจุฑูุฏ ุฅููุชุฑููู":
    email_goal = st.text_area("ูุง ุงูุบุฑุถ ูู ุงูุจุฑูุฏ ุงูุฅููุชุฑูููุ")
    if st.button("ูุชุงุจุฉ ุงูุจุฑูุฏ"):
        if email_goal:
            with st.spinner("ุฌุงุฑู ุฅุนุฏุงุฏ ุงูุจุฑูุฏ ุงูุฑุณูู..."):
                response = openai.ChatCompletion.create(
                    model="gpt-3.5-turbo",
                    messages=[
                        {"role": "system", "content": system_message_email},
                        {"role": "user", "content": email_goal}
                    ]
                )
                email = response.choices[0].message["content"]
                st.markdown("### ุงูุจุฑูุฏ ุงูุฅููุชุฑููู ุงูููุชุฑุญ:")
                st.write(email)

elif task == "ุตูุงุบุฉ ุณูุงุณุฉ ุฌุฏูุฏุฉ":
    policy_topic = st.text_area("ูุง ููุถูุน ุงูุณูุงุณุฉ ุงูุชู ุชุฑุบุจ ุจุตูุงุบุชูุงุ")
    if st.button("ูุชุงุจุฉ ุงูุณูุงุณุฉ"):
        if policy_topic:
            with st.spinner("ุฌุงุฑู ุตูุงุบุฉ ุงูุณูุงุณุฉ ุจุงูุชูุตูู..."):
                response = openai.ChatCompletion.create(
                    model="gpt-3.5-turbo",
                    messages=[
                        {"role": "system", "content": system_message_policy},
                        {"role": "user", "content": policy_topic}
                    ]
                )
                policy = response.choices[0].message["content"]
                st.markdown("### ุงูุณูุงุณุฉ ุงูููุชุฑุญุฉ:")
                st.write(policy)

                docx_file = Document()
                docx_file.add_heading("ุงูุณูุงุณุฉ ุงูููุชุฑุญุฉ", 0)
                docx_file.add_paragraph(policy)
                docx_path = "ุงูุณูุงุณุฉ_ุงูููุชุฑุญุฉ.docx"
                docx_file.save(docx_path)
                with open(docx_path, "rb") as f:
                    st.download_button("ุชุญููู ุงูุณูุงุณุฉ ูู Word", f, file_name=docx_path)

else:
    user_input = st.text_area("ุงูุชุจ ุณุคุงูู ููุง")
    if st.button("ุฅุฑุณุงู"):
        if user_input:
            with st.spinner("ุฌุงุฑู ุฅุนุฏุงุฏ ุฅุฌุงุจุฉ ุชูุตูููุฉ..."):
                response = openai.ChatCompletion.create(
                    model="gpt-3.5-turbo",
                    messages=[
                        {"role": "system", "content": system_message_general},
                        {"role": "user", "content": user_input}
                    ]
                )
                answer = response.choices[0].message["content"] 
                st.markdown("### ุงูุฅุฌุงุจุฉ:")
                st.write(answer)


# โ ุฑุณุงูุฉ ููุงูุฉ ุงูุตูุญุฉ
# st.markdown('<div class="custom-footer">ูู ุญุงู ูุงุฌูุชู ูุดููุฉ ููููู ุงูุชูุงุตู ุนูู ุงูุจุฑูุฏ ุงูุงููุชุฑููู asma.ha.almalki@gmail.com</div>', unsafe_allow_html=True)


# ุฒุฑ ูุณุงุนุฏุฉ ุชูุงุนูู
with st.expander("๐ฉ ูู ุชุญุชุงุฌ ุฅูู ูุณุงุนุฏุฉุ", expanded=False):
    st.info("ูู ุญุงู ูุฌูุฏ ุงุณุชูุณุงุฑ ุฃู ูุงุฌูุชูู ูุดููุฉ ุชูููุฉุ ุงูุฑุฌุงุก ุงูุชูุงุตู  ุนูู ุงูุจุฑูุฏ ุงูุฅููุชุฑููู: asma.ha.almalki@gmail.com")
